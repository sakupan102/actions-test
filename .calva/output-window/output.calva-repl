; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /Users/rokada/Documents/development/test ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; Using host:port 127.0.0.1:50845 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉test.core꞉>  ; Use `alt+enter` to evaluate
clj꞉test.core꞉> 
; Jack-in done.
clj꞉test.core꞉> 
#'test.core/add-five
clj꞉test.core꞉> 
13
clj꞉test.core꞉> 
8
clj꞉test.core꞉> 
5
clj꞉test.core꞉> 
; Syntax error macroexpanding clojure.core/defn at (src/test/core.clj:14:1).
; println - failed: vector? at: [:fn-tail :arity-n :bodies :params] spec: :clojure.core.specs.alpha/param-list
; (println "Hello") - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
clj꞉test.core꞉> 
#function[clojure.core/println]
clj꞉test.core꞉> 
#'test.core/fn
; WARNING: fn already refers to: #'clojure.core/fn in namespace: test.core, being replaced by: #'test.core/fn
clj꞉test.core꞉> 
Hello
nil
clj꞉test.core꞉> 
